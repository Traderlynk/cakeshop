package org.ifsoft.cakeshop.openfire;

import com.jpmorgan.cakeshop.bean.GethConfigBean;
import com.jpmorgan.cakeshop.util.FileUtils;
import com.jpmorgan.cakeshop.util.StringUtils;
import com.jpmorgan.cakeshop.config.*;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

import org.apache.commons.lang3.SystemUtils;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.context.embedded.EmbeddedServletContainerFactory;
import org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;

import org.jivesoftware.openfire.container.Plugin;
import org.jivesoftware.openfire.container.PluginManager;
import org.jivesoftware.openfire.http.HttpBindManager;
import org.jivesoftware.openfire.XMPPServer;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.jivesoftware.util.JiveGlobals;

@Configuration
@EnableAutoConfiguration
@ComponentScan(basePackages = "com.jpmorgan.cakeshop")
@Profile("spring-boot")

public class PluginImpl implements Plugin, PropertyEventListener, ProcessListener
{
    private static final Logger Log = LoggerFactory.getLogger(PluginImpl.class);
    private SpringBootApplication application;

    public void destroyPlugin()
    {

    }

    public void initializePlugin(final PluginManager manager, final File pluginDirectory)
    {
        boolean cakeshopEnabled = JiveGlobals.getBooleanProperty("cakeshop.enabled", true);

        if (cakeshopEnabled)
        {
            String cakeshopHome = JiveGlobals.getHomeDirectory() + File.separator + "cakeshop";
            File cakeshopFolderPath = new File(cakeshopHome);
            if (!cakeshopFolderPath.exists()) cakeshopFolderPath.mkdirs();

            WebAppInit.setLoggingPath(true);
            System.setProperty("eth.config.dir", cakeshopHome);

            Log.error("Setting cakeshop system properties");
            System.setProperty("geth.node", "geth");
            System.setProperty("cakeshop.spring.profiles.active", JiveGlobals.getProperty("spring.profiles.active", "local"));
            System.setProperty("spring.config.location", "file:" + FileUtils.expandPath(AppConfig.getConfigPath(), "application.properties"));

            new SpringApplicationBuilder(SpringBootApplication.class).profiles("container", "spring-boot").run(new String[]{});

        } else {
            Log.info("cakeshop disabled");
        }
    }


    @Bean
    @Profile("spring-boot")

    public EmbeddedServletContainerFactory embeddedServletContainerFactory() {
        JettyEmbeddedServletContainerFactory jetty = new JettyEmbeddedServletContainerFactory();
        jetty.setContextPath("/cakeshop");
        return jetty;
    }
}
